// jQuery tapclick | http://github.com/cabin/jquery-tapclick | Â©2013 Cabin
// Generated by CoffeeScript 1.4.0

(function($) {
  var EVENT_NAME, clickbuster, onClick, onTouchMove, onTouchStart, reset;
  EVENT_NAME = 'tapclick';
  onTouchStart = function(event) {
    var touch;
    $(this).on("touchend." + EVENT_NAME, onClick).on("touchmove." + EVENT_NAME, onTouchMove);
    touch = event.originalEvent.touches[0];
    this.startX = touch.clientX;
    return this.startY = touch.clientY;
  };
  onTouchMove = function(event) {
    var movedX, movedY, touch;
    touch = event.originalEvent.touches[0];
    movedX = Math.abs(touch.clientX - this.startX);
    movedY = Math.abs(touch.clientY - this.startY);
    if (movedX > 10 || movedY > 10) {
      return reset(this);
    }
  };
  onClick = function(event) {
    var wasTouch;
    reset(this);
    wasTouch = event.type === 'touchend';
    event.type = EVENT_NAME;
    event.currentTarget = null;
    jQuery.event.dispatch.apply(this, arguments);
    if (wasTouch && event.currentTarget) {
      event.stopPropagation();
      return clickbuster.preventGhostClick(this.startX, this.startY);
    }
  };
  reset = function(el) {
    return $(el).off("touchend." + EVENT_NAME + " touchmove." + EVENT_NAME);
  };
  clickbuster = {
    coordinates: [],
    preventGhostClick: function(x, y) {
      clickbuster.coordinates.push([x, y]);
      return setTimeout(clickbuster.pop, 2500);
    },
    pop: function() {
      return clickbuster.coordinates.shift();
    },
    onClick: function(event) {
      var movedX, movedY, x, y, _i, _len, _ref, _ref1, _results;
      _ref = clickbuster.coordinates;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        _ref1 = _ref[_i], x = _ref1[0], y = _ref1[1];
        movedX = Math.abs(event.clientX - x);
        movedY = Math.abs(event.clientY - y);
        if (movedX < 25 && movedY < 25) {
          event.stopPropagation();
          _results.push(event.preventDefault());
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  };
  if (document.addEventListener) {
    document.addEventListener('click', clickbuster.onClick, true);
  }
  return jQuery.event.special[EVENT_NAME] = {
    setup: function() {
      return $(this).addClass(EVENT_NAME).on("touchstart." + EVENT_NAME, onTouchStart).on("click." + EVENT_NAME, onClick);
    },
    teardown: function() {
      return $(this).removeClass(EVENT_NAME).off("." + EVENT_NAME);
    }
  };
})(jQuery);
